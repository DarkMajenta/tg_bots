import random
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, CallbackContext, CallbackQueryHandler, ConversationHandler

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
DICE, MODIFIER = range(2)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    context.bot.send_message(
        chat_id=update.message.chat_id,
        text=f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –±–æ—Ç –¥–ª—è –∫—É–±–∏–∫–æ–≤ DnD. –ß—Ç–æ –±—É–¥–µ–º –∫–∏–¥–∞—Ç—å? üé≤"
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /roll
def roll(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É–±–∏–∫–∞
    keyboard = [
        [InlineKeyboardButton("d2", callback_data='2'),
         InlineKeyboardButton("d3", callback_data='3'),
         InlineKeyboardButton("d4", callback_data='4')],
        [InlineKeyboardButton("d6", callback_data='6'),
         InlineKeyboardButton("d8", callback_data='8'),
         InlineKeyboardButton("d10", callback_data='10')],
        [InlineKeyboardButton("d12", callback_data='12'),
         InlineKeyboardButton("d16", callback_data='16'),
         InlineKeyboardButton("d20", callback_data='20'),
         InlineKeyboardButton("d100", callback_data='100')]
    ]

    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    context.bot.send_message(
        chat_id=update.message.chat_id,
        text="–í—ã–±–µ—Ä–∏ –∫—É–±–∏–∫:",
        reply_markup=reply_markup
    )

    return DICE

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE)  -> None:
    query = update.callback_query
    roll_value = int(query.data)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    context.user_data['dice'] = query.message.text

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text="–í–≤–µ–¥–∏—Ç–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä:"
    )

    return MODIFIER

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
def get_modifier(update: Update, context: ContextTypes.DEFAULT_TYPE)  -> None:
    modifier = int(update.message.text.strip())

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    dice = context.user_data.get('dice')

    # –ö–∏–¥–∞–µ–º –∫—É–±–∏–∫ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    result = random.randint(1, int(dice[1:])) + modifier

    context.bot.send_message(
        chat_id=update.effective_chat.id,
        text=f"{dice} üé≤\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
    )

    return ConversationHandler.END

# –¢–µ–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main() -> None:
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    #application = Updater("TOKEN")
    #application = application.application
    application = Application.builder().token("TOKEN").build()
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(ConversationHandler(
        entry_points=[CommandHandler("roll", roll)],
        states={
            DICE: [CallbackQueryHandler(button_click)],
            MODIFIER: [MessageHandler(None, get_modifier)]
        },
        fallbacks=[]
    ))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling(allowed_updates=Update.ALL_TYPES)
    application.idle()

if __name__ == '__main__':
    main()
